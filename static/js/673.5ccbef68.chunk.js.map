{"version":3,"file":"static/js/673.5ccbef68.chunk.js","mappings":"8QAmHA,EApGkB,WAAO,IAAD,QACdA,GAAYC,EAAAA,EAAAA,MAAZD,QAER,GAA0BE,EAAAA,EAAAA,UAAS,CAAC,GAApC,eAAOC,EAAP,KAAcC,EAAd,KAEMC,GAAWC,EAAAA,EAAAA,MAejB,IAbAC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,qGACqBC,EAAAA,EAAAA,IAAqBR,GAD1C,OACQS,EADR,OAEEL,EAASK,GAFX,4CALc,sBACTT,GADS,mCAUdU,EACD,GAAE,CAACV,IAECG,EAAL,CAEA,IACEQ,EAOER,EAPFQ,YACAC,EAMET,EANFS,SACAC,EAKEV,EALFU,aACAC,EAIEX,EAJFW,MACAC,EAGEZ,EAHFY,KACAC,EAEEb,EAFFa,OACAC,EACEd,EADFc,aAEIC,EAA2B,GAAfL,EAIZM,EAAW,yCAAqCR,GAEtD,OACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAiBS,GAAE,oBAAEf,EAASgB,aAAX,aAAE,EAAgBC,YAAlB,QAA0B,IAA7C,sBAGEP,GAAQD,KACR,UAAC,KAAD,YACE,SAAC,KAAD,WACE,gBACES,IAAKZ,EAAcQ,EAZ7B,+DAaUK,IAAG,UAAKV,GAASC,EAAd,WACHU,MAAO,SAGX,UAAC,KAAD,YACE,0BACGX,GAASC,EADZ,KACoBE,EAAaS,MAAM,EAAG,GAD1C,QAGA,yBAAIC,KAAKC,MAAMV,GAAf,QACA,4BACE,SAAC,KAAD,wBACA,uBAAIN,QAEN,4BACE,SAAC,KAAD,sBAMA,uBAAII,EAAOa,KAAI,SAAAC,GAAK,OAAIA,EAAMf,IAAV,IAAgBgB,KAAK,kBAK/ChB,GAAQD,KACR,4BACE,SAAC,KAAD,sCACA,UAAC,KAAD,YACE,SAAC,KAAD,WACE,SAAC,KAAD,CACEM,GAAG,OACHC,MAAO,CAAEC,KAAI,UAAEjB,EAASgB,aAAX,aAAE,EAAgBC,MAFjC,qBAOF,SAAC,KAAD,WACE,SAAC,KAAD,CACEF,GAAG,UACHC,MAAO,CAAEC,KAAI,UAAEjB,EAASgB,aAAX,aAAE,EAAgBC,MAFjC,8BAUR,SAAC,KAAD,MA3Ec,CA8EnB,C","sources":["pages/MovieItem/MovieItem.jsx"],"sourcesContent":["import { Outlet, useParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMediaById } from 'api/AxiosRequests';\nimport { useLocation } from 'react-router-dom';\nimport {\n  MovieSearchSection,\n  MovieContainer,\n  MovieSubContainer,\n  MovieBackToLink,\n  MovieInfo,\n  AdditionalInfoList,\n  AdditionalInfoLink,\n  AdditionalInfoItem,\n} from 'ui';\n\nconst MovieItem = () => {\n  const { movieId } = useParams();\n\n  const [movie, setMovie] = useState({});\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!movieId) {\n      return;\n    }\n\n    async function getMovieById() {\n      const data = await getTrendingMediaById(movieId);\n      setMovie(data);\n    }\n\n    getMovieById();\n  }, [movieId]);\n\n  if (!movie) return;\n\n  const {\n    poster_path,\n    overview,\n    vote_average,\n    title,\n    name,\n    genres,\n    release_date,\n  } = movie;\n  const userScore = vote_average * 10;\n\n  const alternativeImage =\n    'https://www.drupal.org/files/project-images/broken-image.jpg';\n  const existingImg = `https://image.tmdb.org/t/p/w500${poster_path}`;\n\n  return (\n    <MovieSearchSection>\n      <MovieBackToLink to={location.state?.from ?? '/'}>\n        Go back\n      </MovieBackToLink>\n      {(name || title) && (\n        <MovieContainer>\n          <MovieSubContainer>\n            <img\n              src={poster_path ? existingImg : alternativeImage}\n              alt={`${title || name} poster`}\n              width={300}\n            />\n          </MovieSubContainer>\n          <MovieSubContainer>\n            <h2>\n              {title || name} ({release_date.slice(0, 4)})\n            </h2>\n            <p>{Math.floor(userScore)}%</p>\n            <div>\n              <MovieInfo>Overwiew</MovieInfo>\n              <p>{overview}</p>\n            </div>\n            <div>\n              <MovieInfo>Genres</MovieInfo>\n              {/* <ul>\n                {genres.map(({ id, name }) => {\n                  return <li key={id}>{name}</li>;\n                })}\n              </ul> */}\n              <p>{genres.map(genre => genre.name).join(', ')}</p>\n            </div>\n          </MovieSubContainer>\n        </MovieContainer>\n      )}\n      {(name || title) && (\n        <div>\n          <MovieInfo>Additional information</MovieInfo>\n          <AdditionalInfoList>\n            <AdditionalInfoItem>\n              <AdditionalInfoLink\n                to=\"cast\"\n                state={{ from: location.state?.from }}\n              >\n                Cast\n              </AdditionalInfoLink>\n            </AdditionalInfoItem>\n            <AdditionalInfoItem>\n              <AdditionalInfoLink\n                to=\"reviews\"\n                state={{ from: location.state?.from }}\n              >\n                Reviews\n              </AdditionalInfoLink>\n            </AdditionalInfoItem>\n          </AdditionalInfoList>\n        </div>\n      )}\n      <Outlet />\n    </MovieSearchSection>\n  );\n};\n\nexport default MovieItem;\n"],"names":["movieId","useParams","useState","movie","setMovie","location","useLocation","useEffect","getTrendingMediaById","data","getMovieById","poster_path","overview","vote_average","title","name","genres","release_date","userScore","existingImg","to","state","from","src","alt","width","slice","Math","floor","map","genre","join"],"sourceRoot":""}