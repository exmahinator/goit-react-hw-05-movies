{"version":3,"file":"static/js/331.a88c3230.chunk.js","mappings":"kSAqCA,EA/BoB,SAAC,GAAkB,IAAhBA,EAAe,EAAfA,SACrB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KAMMC,EAAY,mCAAG,WAAMC,GAAN,oEACnBA,EAAMC,iBACmB,KAArBJ,EAAUK,OAFK,uBAGjBC,EAAAA,OAAAA,QAAe,iCAHE,0BAMnBR,EAASE,EAAUO,eACnBN,EAAa,IAPM,2CAAH,sDAUlB,OACE,UAAC,KAAD,CAAiBH,SAAUI,EAA3B,WACE,SAAC,KAAD,CACEM,KAAK,OACLC,YAAY,0BACZC,KAAK,YACLC,MAAOX,EACPY,SArBc,SAAAT,GAClBF,EAAaE,EAAMU,OAAOF,MAC3B,KAqBG,SAAC,KAAD,CAAcH,KAAK,SAAnB,uBAGL,EC6BD,EApDmB,WAAO,IAAD,EACvB,GAA0BT,EAAAA,EAAAA,UAAS,IAAnC,eAAOe,EAAP,KAAcC,EAAd,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAErCC,GAAWC,EAAAA,EAAAA,OAEjBC,EAAAA,EAAAA,YAAU,WAAM,wCAKd,qGACqBC,EAAAA,EAAAA,GAAeL,GADpC,UAGsB,KAFdM,EADR,QAGWC,OAHX,uBAIIpB,EAAAA,OAAAA,QACE,2DALN,0BAUES,EAASU,GAVX,4CALc,sBACTN,GADS,mCAkBdQ,EACD,GAAE,CAACR,IAMJ,GAAKL,EAEL,OACE,UAAC,KAAD,YACE,SAAC,EAAD,CAAahB,SARI,SAAA8B,GACnBV,EAA2B,KAAXU,EAAgB,CAAET,MAAOS,GAAW,CAAC,EACtD,KAOG,SAAC,KAAD,UACGd,EAAMe,KAAI,YAA0B,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,MAAOrB,EAAW,EAAXA,KACvB,OACE,SAAC,KAAD,WACE,SAAC,KAAD,CAAiBsB,GAAE,kBAAaF,GAAMG,MAAO,CAAEC,KAAMb,GAArD,SACGU,GAASrB,KAFQoB,EAMzB,QAIR,C","sources":["components/MovieSearch/MovieSearch.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import { useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport PropTypes from 'prop-types';\n\nimport { MovieSearchForm, SearchField, SearchButton } from 'ui';\n\nconst MovieSearch = ({ onSubmit }) => {\n  const [movieName, setMovieName] = useState('');\n\n  const handleQuery = event => {\n    setMovieName(event.target.value);\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (movieName.trim() === '') {\n      Notify.warning('Please enter some movie name!');\n      return;\n    }\n    onSubmit(movieName.toLowerCase());\n    setMovieName('');\n  };\n\n  return (\n    <MovieSearchForm onSubmit={handleSubmit}>\n      <SearchField\n        type=\"text\"\n        placeholder=\"Please enter some movie\"\n        name=\"movieName\"\n        value={movieName}\n        onChange={handleQuery}\n      />\n      <SearchButton type=\"submit\">Search!</SearchButton>\n    </MovieSearchForm>\n  );\n};\n\nexport default MovieSearch;\n\nMovieSearch.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useLocation, useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getMovieSearch } from 'api/AxiosRequests';\nimport MovieSearch from 'components/MovieSearch';\nimport {\n  MovieSearchList,\n  MovieSearchItem,\n  MovieSearchLink,\n  MovieSearchSection,\n} from 'ui';\n\nconst MoviesPage = () => {\n  const [movie, setMovie] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query') ?? '';\n\n  const location = useLocation();\n\n  useEffect(() => {\n    if (!query) {\n      return;\n    }\n\n    async function getMovieBySearch() {\n      const data = await getMovieSearch(query);\n\n      if (data.length === 0) {\n        Notify.warning(\n          'There is no movie with this name! Look for another one!'\n        );\n        return;\n      }\n\n      setMovie(data);\n    }\n\n    getMovieBySearch();\n  }, [query]);\n\n  const handleSubmit = result => {\n    setSearchParams(result !== '' ? { query: result } : {});\n  };\n\n  if (!movie) return;\n\n  return (\n    <MovieSearchSection>\n      <MovieSearch onSubmit={handleSubmit} />\n      <MovieSearchList>\n        {movie.map(({ id, title, name }) => {\n          return (\n            <MovieSearchItem key={id}>\n              <MovieSearchLink to={`/movies/${id}`} state={{ from: location }}>\n                {title || name}\n              </MovieSearchLink>\n            </MovieSearchItem>\n          );\n        })}\n      </MovieSearchList>\n    </MovieSearchSection>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["onSubmit","useState","movieName","setMovieName","handleSubmit","event","preventDefault","trim","Notify","toLowerCase","type","placeholder","name","value","onChange","target","movie","setMovie","useSearchParams","searchParams","setSearchParams","query","get","location","useLocation","useEffect","getMovieSearch","data","length","getMovieBySearch","result","map","id","title","to","state","from"],"sourceRoot":""}